outputDir = "output"
baseDir = "../WikiHopFRKeith"

files {
  trainingPath = ${baseDir}/train.json
  testingPath = "/Users/enrique/Downloads/qangaroo_v1.1/wikihop/dev.json"
  annotationsFile = ${baseDir}/annotations_openie.txt
  openIEAnnotationsFile = ${outputDir}/openie_annotations.ser_deleteme
  entityListFile = ${outputDir}/entities2.tsv
  graphvizDir = ${outputDir}/graphviz
  benchmarkOutput = ${outputDir}/benchmark_deps.json
  glovePath = ${baseDir}/glove.6B.50d.txt
}

pathFinder{
  knowledgeGraphType = "Cooccurrence" #NamedEntityLink, Cooccurrence, OpenIE
  outputFile = newentities/cooccurrence_related_results_newGrounding.ser#${outputDir}/openie_related_results.ser
}

lucene {
  directoryIndex = ${baseDir}/WikiHopLuceneIndex
}

embeddings {
  dimensions = 200
  model = skipgram #skipgram, cbow
  binaryMatrix = false #true in case you want to store the matrix as a binary file
  binaryPath = "./word2vec" # Path to the word2vec executable binary
  threads = 12
  embeddingsFile = ${outputDir}/wikihop_vectors.txt
  vocabularyFile = ${baseDir}/w2vvoc.txt
}

environment {
  knowledgeGraphType = Coocurrence #Coocurrence, OpenIE, NamedEntityLink
  documentUniverse = Local#Local, Random, Related
  successReward = 10
  failureReward = -10
  livingReward = 0.5
  cacheAnnotations = false
  topEntitiesNum = 10
}

benchmark {
  agentType = Cascade #Random, Cascade
  # These are optional parameters, used to split the work on multiple instances (mainly for the HPC)
  #totalWorkers = 3
  #workerIndex = 1
  #numInstances = 10
  ######
}

training {
  episodes = 1000
  targetUpdate = 10
  transitionMemorySize = 100000
  epsilon {
    upperBound = .999
    lowerBound = .001
  }
}